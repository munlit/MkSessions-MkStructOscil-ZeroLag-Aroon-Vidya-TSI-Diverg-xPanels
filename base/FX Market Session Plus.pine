/// ╔═══════════════════════════════╗
/// ║ 	Fx Market Sessions			║
/// ║ 	@	Allen 㔬				║
/// ║ 	©	Boitoki					║
/// ╚═══════════════════════════════╝

//@version=5
indicator(title = 'Fx Market Sessions [🎱 Allen 㔬]',
		  shorttitle				= 'FxM Sessions [🎱Allen 㔬]',
		  overlay					= true,
		  max_boxes_count			= 500,
		  max_labels_count			= 500,
		  max_lines_count			= 500,
		  max_bars_back				= 1000)

//// ─────────────────────────────────────────────────────────────────────

//// ───────────────────────
/// ─── Colors ──────
//// ───────────────────────

/// ─── Standard ──
	// color.aqua								= #00BCD4
	// color.blue								= #2196F3
	// color.teal								= #00897B
	// color.green								= #4CAF50
	// color.olive								= #808000
	// color.lime								= #00E676
	// color.yellow								= #FFEB3B
	// color.orange								= #FF9800
	// color.maroon								= #880E4F
	// color.red								= #FF5252
	// color.fuchsia							= #E040FB
	// color.purple								= #9C27B0
	// color.navy								= #311B92
	// color.black								= #363A45
	// color.gray								= #787B86
	// color.silver								= #B2B5BE
	// color.white								= #FFFFFF

/// ─── Ameritrade ───
	// AmeTrWhite								= #FFFFFF								// AmeritradeWhite
	// AmeTrGrayPlatinum						= #F7F7F7								// AmeritradeGrayPlatinum
	// AmeTrGrayNickel							= #F1F1F1								// AmeritradeGrayNickel
	// AmeTrGrayNickelDark20					= #C0C0C0								// AmeritradeGrayNickelDark20
	// AmeTrGrayAluminum						= #E6E7E9								// AmeritradeGrayAluminum
	// AmeTrGrayAsh								= #D8D8D8								// AmeritradeGrayAsh
	// AmeTrGrayStone							= #999999								// AmeritradeGrayStone
	// AmeTrGrayIron							= #666666								// AmeritradeGrayIron
	// AmeTrGrayCharcoal						= #333333								// AmeritradeGrayCharcoal
	// AmeTrBlack								= #000000								// AmeritradeBlack
	// AmeTrGreenCabbage						= #EBF6E9								// AmeritradeGreenCabbage
	// AmeTrGreenLight70						= #B4D6B2								// AmeritradeGreenLight70
	// AmeTrGreenLight50						= #83BC7F								// AmeritradeGreenLight50
	// AmeTrGreenNat							= #40a829								// AmeritradeGreenNat
	// AmeTrGreenLight20						= #399333								// AmeritradeGreenLight20
	// AmeTrGreen								= #087900								// AmeritradeGreen
	// AmeTrGreenDark20							= #066000								// AmeritradeGreenDark20
	// AmeTrGreenMoss							= #BEE7D3								// AmeritradeGreenMoss
	// AmeTrGreenMint							= #6DC4BC								// AmeritradeGreenMint
	// AmeTrGreenPine							= #38635A								// AmeritradeGreenPine
	// AmeTrRedRose								= #FAD1CF								// AmeritradeRedRose
	// AmeTrRedLight50							= #E08988								// AmeritradeRedLight50
	// AmeTrRedLight20							= #CD4241								// AmeritradeRedLight20
	// AmeTrRed									= #C11312								// AmeritradeRed
	// AmeTrRedDark20							= #940F0E								// AmeritradeRedDark20
	// AmeTrOrangePeach							= #FCE7CA								// AmeritradeOrangePeach
	// AmeTrOrangeCarrot						= #ED8902								// AmeritradeOrangeCarrot
	// AmeTrOOrangeYam							= #BD5310								// AmeritradeOOrangeYam
AmeTrBlueFrost							= #E1EEF9								// AmeritradeBlueFrost
	// AmeTrBlueLagoon							= #316486								// AmeritradeBlueLagoon
	// AmeTrBlueNavy							= #2A5673								// AmeritradeBlueNavy
	// AmeTrBlueNcean							= #64A1C6								// AmeritradeBlueNcean
	// AmeTrPurpleEggPlant						= #732181								// AmeritradePurpleEggPlant

/// ─── Axi ───
	// AxiPrimary								= #FC404D								// AxiPrimary				/// ► ◄ ▲ ▼
	// AxiSecondary								= #282424								// AxiSecondary				/// ↑ ↓ → ←
	// AxiAccent								= #61CE70								// AxiAccent
	// Axi7a46f22								= #D11C36								// Axi7a46f22				/// @|1↓→9|1→5|.-|_789_|	/// coint|1↓→6|1→6|.-|_47_|
	// Axi1519066c								= #FC404D								// Axi1519066c				/// @|1↓→6|1↓→6|!|_7_|		/// coint|1↓→9|1→4|.!|_4_|
	// Axi3d4fa1a1								= #F0EBE3								// Axi3d4fa1a1				/// @|1↓→9|1↓→9|!|_7_|		/// coint|1↓→9|1→6|.-|_1_|		/// ok|1↓→6|1→5|.-|_147_|		/// |1↓→9|1→4|.!|_4_|
	// Axi638b46c1								= #FCD758								// Axi638b46c1				/// @|1→↑12|.-|_147_|
	// Axid07bac9								= #F9B4A8								// Axid07bac9				/// @|1→↑12|.-|_741_|
	// Axie63a114								= #2C4D5A								// Axie63a114				/// @|1→↑12|.-|_852_|		/// gt|1→↑10|.-|_52_|			/// zoo|1→↑10|.-|_82_|			/// |1→↑11|.-|_82_|
	// Axi8bf0845								= #A4D866								// Axi8bf0845				/// @|1→↑12|.-|_852_|		/// thinkors|1→↑9|_8_|2|		/// book|1→↑9|_8_|2|			/// disc|1→↑10|.-|_63_|
	// Axi75c6da1								= #282424								// Axi75c6da1				/// @|1→↑12|.-|_963_|		/// lbx|1→↑11|.-|852|
	// Axi378280f								= #45C2C7								// Axi378280f				/// @|1↓→9|1→6|.|_4_|		/// ok|1↓→6|1→4|.!|_789_|
	// Axi4de92c5								= #6CADDF								// Axi4de92c5				/// @|1→↑13|.-!|_963_|		/// exch|1→↑10|.-|_85_|
	// Axi413dab8			   					= #00275D								// Axi413dab8											/// hotm|1→↑10|.-|_7_|			/// ins|1→↑10|.-|_95_|
	// Axib3fab89								= #55165C								// Axib3fab89
	// Axi548138f								= #45C2C7								// Axi548138f				/// ► ◄ ▲ ▼
	// Axi5ed9920								= #EA1616								// Axi5ed9920				/// ↑ ↓ → ←
	// Axi70f7335								= #DD0606								// Axi70f7335

/// ─── GrayScale ───
	// GraySFocus								= #2D7AED								// GrayScaleFocus
	// GraySWhite								= #FFF									// GrayScaleWhite
	// GraySBlack								= #000									// GrayScaleBlack
	// GraySPrimaryBlackberry					= #2E234B								// GrayScalePrimaryBlackberry
	// GraySPrimaryBlackberry40					= rgba(46, 35, 75, .4))					// GrayScalePrimaryBlackberry40
	// GraySPrimaryBlackberry65					= rgba(46, 35, 75, .65))				// GrayScalePrimaryBlackberry65
	// GraySPrimaryCoral						= #FFB198								// GrayScalePrimaryCoral
	// GraySSecondaryForestGreen				= #244024								// GrayScaleSecondaryForestGreen
	// GraySSecondaryKeyLime					= #B5CE6F								// GrayScaleSecondaryKeyLime
	// GraySSecondaryLavender					= #C5BFE4								// GrayScaleSecondaryLavender
	// GraySSecondaryLavender40					= rgba(197, 191, 228, .4))				// GrayScaleSecondaryLavender40
	// GraySsecondaryLavender60					= rgba(197, 191, 228, .6))				// GrayScalesecondaryLavender60
	// GrayShoverWhite							= #C0BDC9								// GrayScalehoverWhite
	// GrayShoverBlackberry						= #42326B								// GrayScalehoverBlackberry
	// GraySdisabledBlackberry					= #4D4466								// GrayScaledisabledBlackberry
	// GraySactiveBlackberry					= #4D4466								// GrayScaleactiveBlackberry
	// GrayShoverCcoral							= #FFCDBD								// GrayScalehoverCcoral
	// GraySactiveCcoral						= #FF9E80								// GrayScaleactiveCcoral
	// GrayShoverGray							= #827B93								// GrayScalehoverGray
	// GrayShoverGray2							= #6D6581								// GrayScalehoverGray2
	// GraySgrayCharcoal						= #282525								// GrayScalegrayCharcoal
	// GraySgrayCharcoal70						= rgba(40, 37, 37, .7))					// GrayScalegrayCharcoal70
	// GraySgrayCharcoal80						= rgba(40, 37, 37, .8))					// GrayScalegrayCharcoal80
	// GraySgrayLight							= #F5F5F5								// GrayScalegrayLight
	// GraySgrayMedium							= #EEE									// GrayScalegrayMedium
	// GraySgray70								= #696666								// GrayScalegray70
	// GraySgrayDark							= #C1C1C1								// GrayScalegrayDark
	// GraySwebSeasalt		    				= #FAFAFC								// GrayScalewebSeasalt
	// GraySwebDivider							= #e9e7f1								// GrayScalewebDivider
	// GraySwebBackground						= #f3f2fa								// GrayScalewebBackground
	// GraySwebSecondaryText					= #77708A								// GrayScalewebSecondaryText
	// GraySwebStroke							= #D3CEEB								// GrayScalewebStroke
	// GraySwebErrors							= #E00000								// GrayScalewebErrors
	// GraySwebService							= #2D7AED								// GrayScalewebService

/// ─── Interactive ───
	// IntAcPrimary3							= hsla(355, 85%, 46%, 0.03)		    	// InteractivePrimary3
	// IntAcPrimary5							= hsla(355, 85%, 46%, 0.05)		    	// InteractivePrimary5
	// IntAcPrimary10							= hsla(355, 85%, 46%, 0.10)		    	// InteractivePrimary10
	// IntAcPrimary20							= hsla(355, 85%, 46%, 0.20)		    	// InteractivePrimary20
	// IntAcPrimary30							= hsla(355, 85%, 46%, 0.30)		    	// InteractivePrimary30
	// IntAcPrimary40							= hsla(355, 85%, 46%, 0.40)		    	// InteractivePrimary40
	// IntAcPrimary50							= hsla(355, 85%, 46%, 0.50)		    	// InteractivePrimary50
	// IntAcPrimary60							= hsla(355, 85%, 46%, 0.60)		    	// InteractivePrimary60
	// IntAcPrimary70							= hsla(355, 85%, 46%, 0.70)		    	// InteractivePrimary70
	// IntAcPrimary80							= hsla(355, 85%, 46%, 0.80)		    	// InteractivePrimary80
	// IntAcPrimary90							= hsla(355, 85%, 46%, 0.90)		    	// InteractivePrimary90
	// IntAcPrimary								= hsla(355, 85%, 46%, 1.0)				// InteractivePrimary
	// IntAcPrimaryDark10						= hsla(355, 85%, 41%, 1.0)				// InteractivePrimaryDark10
	// IntAcPrimaryDark20						= hsla(355, 85%, 36%, 1.0)				// InteractivePrimaryDark20
	// IntAcPrimaryDark30						= hsla(355, 85%, 31%, 1.0)				// InteractivePrimaryDark30
	// IntAcPrimaryDark40						= hsla(355, 85%, 26%, 1.0)				// InteractivePrimaryDark40
	// IntAcPrimaryDark50						= hsla(355, 85%, 21%, 1.0)				// InteractivePrimaryDark50
	// IntAcSecondary3							= hsla(0, 0%, 13%, 0.03)				// InteractiveSecondary3
	// IntAcSecondary5							= hsla(0, 0%, 13%, 0.05)				// InteractiveSecondary5
	// IntAcSecondary10							= hsla(0, 0%, 13%, 0.10)				// InteractiveSecondary10
	// IntAcSecondary20							= hsla(0, 0%, 13%, 0.20)				// InteractiveSecondary20
	// IntAcSecondary30							= hsla(0, 0%, 13%, 0.30)				// InteractiveSecondary30
	// IntAcSecondary40							= hsla(0, 0%, 13%, 0.40)				// InteractiveSecondary40
	// IntAcSecondary50							= hsla(0, 0%, 13%, 0.50)				// InteractiveSecondary50
	// IntAcSecondary60							= hsla(0, 0%, 13%, 0.60)				// InteractiveSecondary60
	// IntAcSecondary70							= hsla(0, 0%, 13%, 0.70)				// InteractiveSecondary70
	// IntAcSecondary80							= hsla(0, 0%, 13%, 0.80)				// InteractiveSecondary80
	// IntAcSecondary90							= hsla(0, 0%, 13%, 0.90)				// InteractiveSecondary90
	// IntAcSecondary							= hsla(0, 0%, 13%, 1.0)			    	// InteractiveSecondary
	// IntAcSecondaryDark10						= hsla(0, 0%, 10%, 1.0)			    	// InteractiveSecondaryDark10
	// IntAcSecondaryDark20						= hsla(0, 0%, 7%, 1.0)					// InteractiveSecondaryDark20
	// IntAcSecondaryDark30						= hsla(0, 0%, 4%, 1.0)					// InteractiveSecondaryDark30
	// IntAcSecondaryDark40						= hsla(0, 0%, 1%, 1.0)					// InteractiveSecondaryDark40
	// IntAcSecondaryDark50						= hsla(0, 0%, 0%, 1.0)					// InteractiveSecondaryDark50
	// IntAcTertiary3							= hsla(202, 76%, 19%, 0.03)		    	// InteractiveTertiary3
	// IntAcTertiary5							= hsla(202, 76%, 19%, 0.05)		    	// InteractiveTertiary5
	// IntAcTertiary10							= hsla(202, 76%, 19%, 0.10)		    	// InteractiveTertiary10
	// IntAcTertiary20							= hsla(202, 76%, 19%, 0.20)		    	// InteractiveTertiary20
	// IntAcTertiary30							= hsla(202, 76%, 19%, 0.30)		    	// InteractiveTertiary30
	// IntAcTertiary40							= hsla(202, 76%, 19%, 0.40)		    	// InteractiveTertiary40
	// IntAcTertiary50							= hsla(202, 76%, 19%, 0.50)		    	// InteractiveTertiary50
	// IntAcTertiary60							= hsla(202, 76%, 19%, 0.60)		    	// InteractiveTertiary60
	// IntAcTertiary70							= hsla(202, 76%, 19%, 0.70)		    	// InteractiveTertiary70
	// IntAcTertiary80							= hsla(202, 76%, 19%, 0.80)		    	// InteractiveTertiary80
	// IntAcTertiary90							= hsla(202, 76%, 19%, 0.90)		    	// InteractiveTertiary90
	// IntAcTertiary							= hsla(202, 76%, 19%, 1.0)				// InteractiveTertiary
	// IntAcTertiaryDark10						= hsla(202, 76%, 14%, 1.0)				// InteractiveTertiaryDark10
	// IntAcTertiaryDark20						= hsla(202, 76%, 9%, 1.0)				// InteractiveTertiaryDark20
	// IntAcTertiaryDark30						= hsla(202, 76%, 4%, 1.0)				// InteractiveTertiaryDark30
	// IntAcTertiaryDark40						= hsla(202, 76%, 0%, 1.0)				// InteractiveTertiaryDark40

/// ─── Visa ───
	// VisPrimary								= #1434CB								// VisaBrandPrimary			/// ► ◄ ▲ ▼
	// VisPrimaryLight							= #3B57DE								// VisaBrandPrimaryLight	/// ↑ ↓ → ←
	// VisPrimaryDark							= #021E4C								// VisaBrandPrimaryDark
	// VisSecondary								= #FCC015								// VisaBrandSecondary		/// VT|1↓→6|1→5|!|_7_(.)|	/// coint|1↓→6|1→4|_7_.|		/// ok|1↓→6|1→4|.|_1_|			/// |1↓→6|1→4|!|_7_|		/// |1→6|1→↓6|_1_|  #910
	// VisSecondaryLight						= #FFD700								// VisaBrandSecondaryLight	/// |1↓#→6|1↓→6|_789_|-!|	/// |1↓→6|1→4|-|_74_|
	// VisSecondaryDark							= #F7B600								// VisaBrandSecondaryDark	/// @|1↓→6|1→4|!|_789_|
	// VisTertiary7								= #2C2C2C								// VisaBrandTertiary7		/// @|1↓→6|1→6|.!|_4_(.)|
	// VisTertiary6								= #5C5C5C								// VisaBrandTertiary6		/// @|1↓→9|1→6|.|_7_|		/// ()@|1↓→9|1→6|!|_7_|		/// bix|1↓→6|1→3|.-|_1_|
	// VisTertiary5								= #979797								// VisaBrandTertiary5		/// @|1↓→9|1→5|.!|_7_|
	// VisTertiary4								= #B9B9B9								// VisaBrandTertiary4		/// @|1↓→6|1→5|-|_714_|		/// bix|1↓→3|1→5|.-|_789_|
	// VisTertiary3								= #DEDEDE								// VisaBrandTertiary3		/// @|1→↓6|1→5|_741_|
	// VisTertiary2								= #EEEEEE								// VisaBrandTertiary2									/// ap|1→↓6|1→5|!|_7_|
	// VisTertiary1								= #F7F7F7								// VisaBrandTertiary1		/// @|1→↑12|.-|_741_|		/// gt|1→↑10|.-|_6_|

/// ─── Latam ───
	// LatRedBackground							= rgb(232, 17, 75)						// Latam Red Background

/// ─── Surfe ──
SurfePrimary							= #073742
	// SurfeSecondary							= #FFA2EA
	// SurfeSky100								= #EBFAFE
	// SurfeSky200								= #D1F2FD
	// SurfeSky300								= #BDEDFC
	// SurfeSky400								= #88D7F0
	// SurfeSky500								= #73C7E1
	// SurfeSky800								= #1798C1
	// SurfeSeaweed100							= #073742
	// SurfeSeaweed200							= #08272E
	// SurfeSunrise100							= #FEFFD6
	// SurfeSunrise150							= #F8FABB
	// SurfeSunrise200							= #FDFFAD
	// SurfeSunrise300							= #FCFF8F
	// SurfeHorizonLight						= #FFF2FC
	// SurfeHorizon100							= #FFDEF7
	// SurfeHorizon200							= #FFBCF0
	// SurfeHorizon300							= #FFA2EA
	// SurfePink100								= #FFF1FC
SurfePink500							= #FC84E1
	// SurfePink600								= #D160B7
	// SurfeSunset50							= #FFECE1
	// SurfeSunset100							= #FFCFB4
	// SurfeSunset200							= #FF9F6A
	// SurfeSunset300							= #FF9254
	// SurfeGray50								= #FAFAFA
	// SurfeGray100								= #F4F5F6
	// SurfeGray150								= #EBEFF0
	// SurfeGray200								= #E0E5E6
	// SurfeGray300								= #C1CACD
	// SurfeGray400								= #889BA0
	// SurfeGray450								= #5C818A
	// SurfeGray500								= #5A6C71
	// SurfeGray600								= #49575B
	// SurfeGray700								= #3A4446
	// SurfeGray800								= #22282A
	// SurfeGray900								= #15191A

/// ─── CitiBank ──
	// CitiAccentNearWhite						= #F5F7FC
	// CitiAccentUltraLightBlue					= #E6F7FF
CitiAccentLightBlue						= #CCEEFF								// #CEF
	// CitiAccentUltraLightRed					= #FCD9D9
	// CitiAccentLightRed						= #FFF2F3
	// CitiAccentFuchsia						= #C6007E
	// CitiAccentLavender						= #A05EB5
	// CitiAccentPurple							= #6B3077
	// CitiAccentPlum							= #890C58
	// CitiAccentBurntOrange					= #CB6015
	// CitiAccentTangerine						= #ED8B00
	// CitiAccentYellow							= #FFCD00
	// CitiAccentGoldenrod						= #C99700
	// CitiAccentOlive							= #949300
	// CitiAccentLime							= #C4D600
	// CitiAccentGreen							= #84BD00
	// CitiAccentForest							= #00843D
	// CitiAccentTeal							= #007377
	// CitiAccentAqua							= #00B0B9
	// CitiProductCredito						= #056DAE
	// CitiAccountMaestra						= #343434
	// CitiAccountEjecutivo						= #666
	// CitiAccountPerfiles						= #056DAE
	// CitiSegmentPrivada						= #000
	// CitiSegmentPriority						= #0E2A48
	// CitiSegmentPatrimonial					= #B4975A
	// CitiCardMartiClasica						= #1A2E52
	// CitiCardLaverde							= #004D2F
	// CitiCardPremia							= #1A2E52
	// CitiCardTeleton							= #653279
	// CitiCardRewards							= #065C77
	// CitiCardPrestige							= #666
	// CitiCardPumas							= #1A2E52
	// CitiCardMartiPremium						= #2B2B2B
	// CitiCardSimplicity						= #1A2E52
	// CitiCardHomeDepot						= #E57200
	// CitiCardBeyond							= #2B2B2B
	// CitiCardBsmart							= #056DAE
	// CitiCardAfinity							= #2B2B2B
	// CitiCardAadvantage						= #998847
	// CitiCitiR1								= #ED1C24
	// CitiCitiB3								= #3ABAED
	// CitiCitiB2								= #056DAE
	// CitiCitiB1								= #1A2E52
	// CitiSystemUltraLightWarning				= #FFFBF2
	// CitiSystemUltraLightSuccess				= #F4FFF2
	// CitiSystemUltraLightInformation			= #E6F7FF
	// CitiSystemUltraLightDanger				= #FFF2F3
	// CitiSystemLightWarning					= #FFF2D9
	// CitiSystemLightSuccess					= #DFFFD9
	// CitiSystemLightInformation				= #B7F2FF
	// CitiSystemLightDanger					= #FCD9D9
	// CitiSystemWarning						= #FF8C19
	// CitiSystemSuccess						= #093
	// CitiSystemInfo							= #0059B3
	// CitiSystemError							= #C00
	// CitiMonoWhite							= #FFF
	// CitiMonoUltraLightGray					= #F8F8F8
	// CitiMonoLightGray						= #D3DAEA
	// CitiMonoMediumGray						= #ACB3BF
	// CitiMonoGray								= #8A8F99
	// CitiMonoDarkGray							= #5C5F66
	// CitiMonoSlateGray						= #292C33

/// ─── Arbe Robotics ───
	// ARoPrimary								= #0035FF								// ArbePrimary
	// ARoPrimaryLight							= #0640FF								// ArbePrimaryLight
	// ARoSecondary		    					= #04EBFF								// ArbeSecondary

/// ─── AutoX ───
	// AxPrimary								= #2253F0								// AutoXPrimary
	// AxPrimaryLight							= #0050F9								// AutoXPrimaryLight
	// AxSecondary								= #75EBC0								// AutoXSecondary

/// ─── EEG ───
	// EEGSkyBlue30								= #01EBF9								// EEGSkyBlue30
	// EEGSkyBlue40								= #00E7FD								// EEGSkyBlue40
	// EEGFucsia40								= #FF00B1								// EEGFucsia40
	// EEGFucsia50								= #FE0CB6								// EEGFucsia50

/// ─── Bright Line ───
BrLiYel10								= #FBFD73								// BrightLine Yellow Light
	// BrLiYel20								= #FFFD52								// BrightLine Yellow Light
BrLiYel30								= #FDF43C								// BrightLineB Yellow High
BrLiYel40								= #FEF301								// BrightLineBackground Yellow Nit
	// BrLiYel50								= #FFDB00								// BrightLineBackground Yellow Base

/// ─── Waves Beh ───
WavBehPink20							= #FFB7FF								// WavBehPink20
	// WavBehFucsia50							= #DF36DF								// WavBehFucsia50
	// WavBehNude10								= #FFFDDF								// WavBehNude10
	// WavBehSky70								= #06B7FE								// WavBehSky70
WavBehAqua50							= #0CF2F2								// WavBehAqua50

/// ─── Victoria Secret ───
	// VictSecPink20							= #EDB3DD								// VictSecPink20
	// VictSecPink50							= #E651CD								// VictSecPink50
	// VictSecFucsia50							= #EA1889								// VictSecFucsia50
	// VictSecWine30							= #C2329F								// VictSecWine30
	// VictSecWine50							= #7D1250								// VictSecWine50
	// VictSecWine60							= #7C2558								// VictSecWine60

/// ─── Mongo DB ───
MongoSky10								= #E3FCF7								// MongoDBSky10
	// MongoYellow50							= #FFE212								// MongoDBYellow50
	// MongoLime50								= #B1FF05								// MongoDBLime50
	// MongoGreen50								= #00ED64								// MongoDBGreen50
	// MongoGreen60								= #13AA52								// MongoDBGreen60
	// MongoGreen70								= #00684A								// MongoDBGreen70
	// MongoGreen80								= #014E3D								// MongoDBGreen80
	// MongoGray50								= #42494F								// MongoDBGray50
	// MongoGray70								= #001E2B								// MongoDBGray70
	// MongoBlack50								= #231F20								// MongoDBBlack50

/// ─── Platzi ───
PlatziGreen30							= #ADEB42								// PlatziGreen60
	// PlatziGreen40							= #85C638								// PlatziGreen60
	// PlatziGreen50							= #95CA3E								// PlatziGreen50
	// PlatziGreen60							= #98CA3F								// PlatziGreen40
	// PlatziBlue50								= #24385B								// PlatziBlue50
	// PlatziBlue70								= #121F3D								// PlatziBlue70
	// PlatziBlue80								= #0C1633								// PlatziBlue80

/// ─── Ultr ───
	// UltrBlueSky10							= #59F2E9								// UltrBlueSky10
	// UltrBlueSky20							= #39F0EA								// UltrBlueSky20
	// UltrMenta10								= #E0F9EF								// UltrMenta10
	// UltrMenta20								= #80F3EC								// UtlrMenta20
	// UltrMenta30								= #7FFFD4								// UltrMenta30
	// UltrMenta40								= #73FFCA								// UltrMenta40
	// UltrMenta50								= #9CFFD7								// UtlrMenta50
	// UltrMenta60								= #4FFFC0								// UtlrMenta60
	// UltrGreen50								= #95BD5F								// UltrGreen50
	// UltrRose20								= #FFA3E3								// UltrRose
	// UltrFucsia30								= #FF6FD3								// UltrFucsia
	// UltrLyla									= #7E57C2								// UltrLyla
	// UltrLightGray							= #787B86								// UltrLightGray
	// UltrRedNit								= #DE0011								// UltrRedNit
	// UltrRed									= #DB004B								// UltrRed
	// UltrBlue									= #003BDE								// UltrBlue
	// UltrYellow								= #F4DE1A								// UltrYellow
	// UltrSkyBlue								= #12CEF8								// UltrSkyBlue
	// UltrOrange								= #FF5A00								// UltrOrange

/// ─── Allen ───
AllenSky10								= #CCF8FF								// AllenSky10
AllenSky20								= #80F3EC								// AllenSky20
	// AllenSky50								= #01EBF9								// AllenSky50

	// AllenMint10								= #E0F9EF								// AllenMint10
AllenMint20								= #9CFFD7								// AllenMint20
	// AllenMint30								= #7FFFD4								// AllenMint30
	// AllenMint40								= #73FFCA								// AllenMint40
	// AllenMint50								= #4FFFC0								// AllenMint50
AllenMint60								= #33FFAC								// AllenMint60

	// AllenFucsia30							= #E06BAA								// AllenFucsia30
	// AllenFucsia50							= #EA1889
	// AllenWine50								= #E91E63								// AllenWine50
	// AllenWine60								= #E8114B								// AllenWine60

//// ─────────────────────────────────────────────────────────────────────

//// ───────────────────────
/// ─── FxMSs ───
/// ─── Cont ───
//// ───────────────────────

fxMrkSsGroupGral					= 'General'
fxMrkSsGroupSyd						= 'Sesión Sydney'
fxMrkSsGroupTyo						= 'Sesión Tokyo'
fxMrkSsGroupLon						= 'Sesión Londres'
fxMrkSsGroupNewY					= 'Sesión New York'
fxMrkSsGroupBox						= 'Box'
fxMrkSsGroupTag						= 'Etiquetas'
fxMrkSsGroupRng						= 'Rango Abierto'
fxMrkSsGroupOsc						= 'Oscilador'
fxMrkSsGroupFibo					= 'Niveles Fibonacci'
fxMrkSsGroupOpc						= 'Opciones'
fxMrkSsGroupBar						= 'Vela'
fxMrkSsGroupAlrt					= 'Alertas Visuales'
fxMrkSsGroupInf						= 'Información'
fxMrkSsGroupLine					= 'Box'

vFxMkSs_Show						= true
vFxMkSs_Yes							= 'Si'
vFxMkSs_No							= 'No'
vFxMkSs_Extend						= 'Extendido'
vfxMkSs_Hide						= 'Hide'
tooltipFfxMkSs_TimeZ				= "Mas opciones de zonas horarias, por ej: \n 'GMT-10', 'GMT-9', 'GMT-8', 'GMT-7', 'GMT-6', \n 'GMT-5', 'GMT-4', 'GMT-3', 'GMT-2', 'GMT-1', \n 'GMT', 'GMT+1', 'GMT+2', 'GMT+3', 'GMT+4'"

vFxMkSs_LondonColor					= WavBehAqua50
vFxMkSs_NewYorkColor				= AllenMint60
vFxMkSs_TokyoColor					= SurfePink500
vFxMkSs_SydneyColor					= BrLiYel30

vFxMkSs_KillLonColor				= vFxMkSs_LondonColor
vFxMkSs_KillNwYColor				= vFxMkSs_NewYorkColor
vFxMkSs_KillTykColor				= vFxMkSs_TokyoColor
vFxMkSs_KillSidColor				= vFxMkSs_SydneyColor

vFxMkSs_NoneColor					= color.new(SurfePrimary, 100)


//// ───────────────────────
/// ─── FxMSs ───
/// ─── Inputs ───
//// ───────────────────────

/// ─── Timezone
optFxMkSs_TimeZone					= input.string	(defval = 'NYSE',		title = 'Timezone',											group = fxMrkSsGroupGral,			tooltip = tooltipFfxMkSs_TimeZ ,
// optFxMkSs_TimeZone					= input.string	(defval = 'New York',	title = 'Timezone',											group = fxMrkSsGroupGral,			tooltip = tooltipFfxMkSs_TimeZ ,
		  options					= ["New York", "Chicago", "NYSE", "Londres", "Tokyo", "Sydney", "Argentina"])
showFxMkSs_History					= input.string	(defval = vFxMkSs_Yes,	title = 'Historico',										group = fxMrkSsGroupGral,			options = [vFxMkSs_Yes, vFxMkSs_No]) == vFxMkSs_Yes
vFxMkSs_Lookback					= 12 * 60

/// ─── Sessions

/// ─── London
showFxMkSs_SessLon					= input.bool	(true,					title = 'Londres  ',										group = fxMrkSsGroupLon,			inline = 'session1_1') and vFxMkSs_Show
vFxMkSs_SessLnLabel					= input.string	('Londres',				title = ' ',												group = fxMrkSsGroupLon,			inline = 'session1_1')
vFxMkSs_SessLnColor					= input.color	(vFxMkSs_LondonColor,	title = ' ',												group = fxMrkSsGroupLon,			inline = 'session1_1')
vFxMkSs_SessLnTimeZ					= input.session	('0200-1100',			title = 'Periodo',											group = fxMrkSsGroupLon)
vFxMkSs_SessLnExtend				= input.string	(vFxMkSs_No,			title = 'Extender',											group = fxMrkSsGroupLon,
		  options					= [vFxMkSs_No, vFxMkSs_Extend])

/// Killzones London
showFxMkSs_KillLonOpen				= input.bool	(true,					title = 'KillZone Open',									group = fxMrkSsGroupLon,			inline = 'KillLonOpen')
vFxMkSs_KillLonTimeOpen				= input.session	('0300-0430',			title = ' ',												group = fxMrkSsGroupLon,			inline = 'KillLonOpen')
showFxMkSs_KillLonRally				= input.bool	(true,					title = 'KillZone Rally',									group = fxMrkSsGroupLon,			inline = 'KillLonRally')
vFxMkSs_KillLonTimeRally			= input.session	('0500-0630',			title = ' ',												group = fxMrkSsGroupLon,			inline = 'KillLonRally')
showFxMkSs_KillLonClose				= input.bool	(true,					title = 'KillZone Close',									group = fxMrkSsGroupLon,			inline = 'KillLonClose')
vFxMkSs_KillLonTimeClose			= input.session	('1000-1100',			title = ' ',												group = fxMrkSsGroupLon,			inline = 'KillLonClose')

/// ─── New York
showFxMkSs_SessNy					= input.bool	(true,					title = 'New York  ',										group = fxMrkSsGroupNewY,			inline = 'session2_1') and vFxMkSs_Show
vFxMkSs_SessNyLabel					= input.string	('New York',			title = ' ',												group = fxMrkSsGroupNewY,			inline = 'session2_1')
vFxMkSs_SessNyColor					= input.color	(vFxMkSs_NewYorkColor,	title = ' ',												group = fxMrkSsGroupNewY,			inline = 'session2_1')
vFxMkSs_SessNyTimeZ					= input.session	('0700-1600',			title = 'Periodo',											group = fxMrkSsGroupNewY)
vFxMkSs_SessNyExtend				= input.string	(vFxMkSs_No,			title = 'Extender',											group = fxMrkSsGroupNewY,
		  options					= [vFxMkSs_No, vFxMkSs_Extend])

/// Killzones New York
showFxMkSs_KillNwYOpen				= input.bool	(true,					title = 'KillZone Open',									group = fxMrkSsGroupNewY,			inline = 'KillNwYOpen')
vFxMkSs_KillNwYTimeOpen				= input.session	('0630-0745',			title = ' ',												group = fxMrkSsGroupNewY,			inline = 'KillNwYOpen')
showFxMkSs_KillNwYRally				= input.bool	(true,					title = 'KillZone Rally',									group = fxMrkSsGroupNewY,			inline = 'KillNwYRally')
vFxMkSs_KillNwYTimeRally			= input.session	('0900-1045',			title = ' ',												group = fxMrkSsGroupNewY,			inline = 'KillNwYRally')
showFxMkSs_KillNwYClose				= input.bool	(true,					title = 'KillZone Close',									group = fxMrkSsGroupNewY,			inline = 'KillNwYClose')
vFxMkSs_KillNwYTimeClose			= input.session	('1130-1215',			title = ' ',												group = fxMrkSsGroupNewY,			inline = 'KillNwYClose')

/// ─── Tokyo
showFxMkSs_SessTk					= input.bool	(true,					title = 'Tokyo   ',											group = fxMrkSsGroupTyo,			inline = 'session3_1') and vFxMkSs_Show
vFxMkSs_SessTkLabel					= input.string	('Tokyo',				title = ' ',												group = fxMrkSsGroupTyo,			inline = 'session3_1')
vFxMkSs_SessTkColor					= input.color	(vFxMkSs_TokyoColor,	title = ' ',												group = fxMrkSsGroupTyo,			inline = 'session3_1')
vFxMkSs_SessTkTimeZ					= input.session	('1800-0300',			title = 'Periodo',											group = fxMrkSsGroupTyo)
vFxMkSs_SessTkExtend				= input.string	(vFxMkSs_No,			title = 'Extender',											group = fxMrkSsGroupTyo,
		  options					= [vFxMkSs_No, vFxMkSs_Extend])

// /// Killzones Tokyo
// showFxMkSs_KillTykOpen				= input.bool	(true,					title = 'KillZone Open',									group = fxMrkSsGroupTyo,			inline = 'KillTyoOpen')
// vFxMkSs_KillTykTimeOpen				= input.session	('1845-2000',			title = ' ',												group = fxMrkSsGroupTyo,			inline = 'KillTyoOpen')
// showFxMkSs_KillTykRally				= input.bool	(true,					title = 'KillZone Rally',									group = fxMrkSsGroupTyo,			inline = 'KillTyoRally')
// vFxMkSs_KillTykTimeRally			= input.session	('2030-2230',			title = ' ',												group = fxMrkSsGroupTyo,			inline = 'KillTyoRally')
// showFxMkSs_KillTykClose				= input.bool	(true,					title = 'KillZone Close',									group = fxMrkSsGroupTyo,			inline = 'KillTyoClose')
// vFxMkSs_KillTykTimeClose			= input.session	('0015-0145',			title = ' ',												group = fxMrkSsGroupTyo,			inline = 'KillTyoClose')

/// ─── Sydney
showFxMkSs_SessSyd					= input.bool	(false,					title = 'Sydney  ',											group = fxMrkSsGroupSyd,			inline = 'session4_1') and vFxMkSs_Show
vFxMkSs_SessSdLabel					= input.string	('Sydney',				title = ' ',												group = fxMrkSsGroupSyd,			inline = 'session4_1')
vFxMkSs_SessSdColor					= input.color	(vFxMkSs_SydneyColor,	title = ' ',												group = fxMrkSsGroupSyd,			inline = 'session4_1')
vFxMkSs_SessSdTimeZ					= input.session	('1600-0100',			title = 'Periodo',											group = fxMrkSsGroupSyd)
vFxMkSs_SessSdExtend				= input.string	(vFxMkSs_No,			title = 'Extender',											group = fxMrkSsGroupSyd,
		  options					= [vFxMkSs_No, vFxMkSs_Extend])

/// ─── Show & Styles
optFxMkSs_BorderStyle				= input.string	("···",					title = 'Box style', 										group = fxMrkSsGroupLine,
		  options					= ["───", "---", "···"])
vFxMkSs_BorderWidth					= input.int		(1,						title = 'Ancho de Linea',	minval = 0,						group = fxMrkSsGroupLine)
vFxMkSs_BgOpacity					= input.int		(92,					title = 'Transp fondo',minval = 0,maxval = 100,step = 1,	group = fxMrkSsGroupLine,			tooltip = 'Setting the 100 is no background color')
vFxMkSs_LineOpacity					= input.int		(40,					title = 'Transp contorno',minval = 0,maxval = 100,step = 1,	group = fxMrkSsGroupLine,			tooltip = 'Setting the 100 is no background color')

/// ─── Labels
showFxMkSs_Labels					= input.bool	(true,					title = 'Información',										group = fxMrkSsGroupTag,			inline = 'label_show') and vFxMkSs_Show
optFxMkSs_LabelSize					= input.string	('Pequeño',				title = '',													group = fxMrkSsGroupTag,			inline = 'label_show',
		  options					= ['Auto', 'Mini', 'Pequeño', 'Normal', 'Grande', 'Enorme'])
optFxMkSs_LabelPositionY			= input.string	('Arriba',				title = '',													group = fxMrkSsGroupTag,			inline = 'label_loc',
		  options					= ['Arriba', 'Abajo'])
optFxMkSs_LabelPositionIn			= input.string	('Externo',				title = '',													group = fxMrkSsGroupTag,			inline = 'label_loc',
		  options					= ['Interno', 'Externo'])

/// ─── Info
showFxMkSs_LabelName				= input.bool	(true,					title = 'Sesión',											group = fxMrkSsGroupTag,			inline = 'label_format')
showFxMkSs_LabelDay					= input.bool	(true,					title = 'Dia',												group = fxMrkSsGroupTag,			inline = 'label_format')
showFxMkSs_LabelPrice				= input.bool	(false,					title = 'Precio',											group = fxMrkSsGroupTag,			inline = 'label_format')
showFxMkSs_LabelPips				= input.bool	(true,					title = 'Pips',												group = fxMrkSsGroupTag,			inline = 'label_format')

vFxMkSsPips							= syminfo.mintick * 10
vFxMkSs_MaxBars						= 500

vFxMkSs_FmtPrice					= '{0,number,#.#####}'
vFxMkSs_FmtPips						= '{0,number,#.#}'
vFxMkSs_IconSeparator				= ' • '
vFxMkSs_IsWeekends					= dayofweek == 7 or dayofweek == 1

optFxMkSs_BorderKillzone			= line.style_solid

//// ───────────────────────
/// ─── FxMSs ───
/// ─── Switch ───
//// ───────────────────────

string switchFxMksLines		= switch optFxMkSs_BorderStyle
	"───"							=> line.style_solid
	"---"							=> line.style_dashed
	"···"							=> line.style_dotted

string switchFxMksPosY		= switch optFxMkSs_LabelPositionY
	"Arriba"						=> "top"
	"Abajo"							=> "bottom"

string switchFxMksIntra		= switch optFxMkSs_LabelPositionIn
	"Externo"						=> "outside"
	"Interno"						=> "inside"

string switchFxMksSize		= switch optFxMkSs_LabelSize
	"Auto"							=> size.auto
	"Mini"							=> size.tiny
	"Pequeño"						=> size.small
	"Normal"						=> size.normal
	"Grande"						=> size.large
	"Enorme"						=> size.huge

string switchFxMksSession	= switch optFxMkSs_TimeZone
	"NYSE"							=> "UTC-5"
	"New York"						=> "America/New_York"
	"Chicago"						=> "America/Chicago"
	"Londres"						=> "Europe/London"
	"Tokyo"							=> "Asia/Tokyo"
	"Shanghai"						=> "Asia/Shanghai"
	"Sydney"						=> "Australia/Sydney"
	"Argentina"						=> "America/Argentina/Buenos_Aires"

//// ───────────────────────
/// ─── FxMSs ───
/// ─── Functions ───
//// ───────────────────────

FuncFxMkSs_GetDay(n) =>
	switch n
		1							=> 'Domingo'
		2							=> 'Lunes'
		3							=> 'Martes'
		4							=> 'Miercoles'
		5							=> 'Jueves'
		6							=> 'Viernes'
		7							=> 'Sabado'

FuncFxMkSs_GetPeriod(_session, _start, _lookback) =>
	result							= math.max(_start, 1)
	for i 							= result to _lookback
		if na(_session[i+1])		and _session[i]
			result					:= i+1
			break
	result

FuncFxMkSs_GetStarted(_session) => na(_session[1]) and _session

FuncFxMkSs_GetEnded(_session) => na(_session) and _session[1]

FuncFxMkSs_GetLabelPosition(_y, _side) =>
	switch _y
		'top'						=> _side == 'outside' ? label.style_label_lower_left : label.style_label_upper_left
		'bottom'					=> _side == 'outside' ? label.style_label_upper_left : label.style_label_lower_left

vFxMkSs_LabelPosition				= FuncFxMkSs_GetLabelPosition(switchFxMksPosY, switchFxMksIntra)

/// ─── Labels
FuncFxMkSs_RenderLabel(_show, _session, _is_started, _color, _top, _bottom, _text, _delete_history) =>
	var label my_label				= na
	var int start_time				= na

	v_position_y					= (switchFxMksPosY == 'top') ? _top : _bottom
	v_label							= array.new_string()
	v_chg							= _top - _bottom
	
	if _is_started
		start_time					:= time
	
	if showFxMkSs_LabelName and not na(_text)
		array.push(v_label, _text)

	/// day
	if showFxMkSs_LabelDay
		array.push(v_label, FuncFxMkSs_GetDay(dayofweek(start_time, switchFxMksSession)))

	/// price
	if showFxMkSs_LabelPrice
		array.push(v_label, str.format(vFxMkSs_FmtPrice, v_chg))

	/// pip
	if showFxMkSs_LabelPips
		array.push(v_label, str.format(vFxMkSs_FmtPips, v_chg / vFxMkSsPips) + ' pips')

	if _show
		if _is_started
			my_label				:= label.new(time, v_position_y, array.join(v_label, vFxMkSs_IconSeparator), textcolor = color.new(_color, vFxMkSs_LineOpacity), color = vFxMkSs_NoneColor, size = switchFxMksSize, style = vFxMkSs_LabelPosition, xloc = xloc.bar_time)
			
			if _delete_history
				label.delete(my_label[1])

		if _session
			label.set_y(my_label, v_position_y)
			label.set_text(my_label, array.join(v_label, vFxMkSs_IconSeparator))

/// ─── Markets ───

FuncFxMkSs_RenderSession(_show, _session, _is_started, _is_ended, _color, _top, _bottom, _extend, _is_extend, _delete_history) =>
	var box my_box					= na

	x0_1							= ta.valuewhen(na(_session[1]) and _session, bar_index, 1)
	x0_2							= ta.valuewhen(na(_session) and _session[1], bar_index, 0)
	var x1							= 0
	var x2							= 0
	var session_open				= 0.0
	var session_high				= 0.0
	var session_low					= 0.0

	if _show
		if _is_started
			diff					= math.abs(x0_2 - x0_1)
			x1						:= bar_index
			x2						:= bar_index + (math.min(diff, vFxMkSs_MaxBars))
			my_box					:= box.new(x1, _top, x2, _bottom,	border_color = color.new(_color, vFxMkSs_LineOpacity),		border_width = vFxMkSs_BorderWidth,		border_style = switchFxMksLines,		bgcolor = color.new(_color, vFxMkSs_BgOpacity))

			session_open			:= open
			session_high			:= _top
			session_low				:= _bottom

			if _is_extend
				box.set_extend(my_box, extend.right)

			if _delete_history
				box.delete(my_box[1])

		else if _session
			box.set_top(my_box, _top)
			box.set_bottom(my_box, _bottom)

			session_high			:= _top
			session_low				:= _bottom
		
		else if _is_ended
			session_open			:= na
			box.set_right(my_box, bar_index)

	[x1, x2, session_open, session_high, session_low]

/// ─── Boxes
draw(_show, _session, _color, _label, _extend, _lookback) =>
	max								= FuncFxMkSs_GetPeriod(_session, 1, _lookback)
	top								= ta.highest(high, max)
	bottom							= ta.lowest(low, max)
	
	is_started						= FuncFxMkSs_GetStarted(_session)
	is_ended						= FuncFxMkSs_GetEnded(_session)
	is_extend						= _extend != vFxMkSs_No

	delete_history					= (not showFxMkSs_History) or is_extend

	[x1, x2, _open, _high, _low]	= FuncFxMkSs_RenderSession(_show, _session, is_started, is_ended, _color, top, bottom, _extend, is_extend, delete_history)

	if showFxMkSs_Labels
		FuncFxMkSs_RenderLabel(_show, _session, is_started, _color, top, bottom, _label, delete_history)

	[_session, _open, _high, _low]

/// ─── Killzones
FuncFxMkSs_RenderKillZones(_on, _color) =>

	var int Bar				= 0
	var float High			= 0.0 
	var float Low			= 0.0
	var box BoX				= na
	var label LabeL			= na 

	if  (_on[1] == 0 and _on == 1)
		Bar					:= bar_index
		High				:= high
		Low					:= low

	else if (_on[1] == 1 and _on == 1)
		High				:= math.max(high , High) 
		Low					:= math.min(low , Low)

	else if _on == 0
		High				:= 0.0 
		Low					:= 0.0
		Bar					:= 0

	if _on > _on[1]
		BoX					:= box.new(bar_index, High, bar_index, Low,
		  bgcolor			= color.new(_color, 80),
		  border_color		= color.new(_color, 90),
		  border_width		= 1,
		  border_style		= optFxMkSs_BorderKillzone,
		  force_overlay		= true)

	if _on and _on == _on[1]
		box.set_top(BoX, High)
		box.set_bottom(BoX, Low)
		box.set_right(BoX, bar_index)
		label.set_x(LabeL,math.round(math.avg(Bar,bar_index)))
		label.set_y(LabeL, High)

	[High , Low ]

//// ───────────────────────
/// ─── FxMSs ───
/// ─── Instances ───
//// ───────────────────────

/// ─── Timeframe
string timeZo						= (switchFxMksSession == vFxMkSs_No or switchFxMksSession == '') ? na : switchFxMksSession

/// ─── Timeframe London
int timeMkSs_SessLon				= time(timeframe.period, vFxMkSs_SessLnTimeZ, timeZo)

timeMkSs_KillLonOpen				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillLonTimeOpen,	switchFxMksSession)))
timeMkSs_KillLonRally				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillLonTimeRally,	switchFxMksSession)))
timeMkSs_KillLonClose				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillLonTimeClose,	switchFxMksSession)))

/// ─── Timeframe New York
int timeMkSs_SessNewY				= time(timeframe.period, vFxMkSs_SessNyTimeZ, timeZo)

timeMkSs_KillNwYOpen				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillNwYTimeOpen,	switchFxMksSession)))
timeMkSs_KillNwYRally				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillNwYTimeRally,	switchFxMksSession)))
timeMkSs_KillNwYClose				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillNwYTimeClose,	switchFxMksSession)))

/// ─── Timeframe Tokyo
int timeMkSs_SessTyk				= time(timeframe.period, vFxMkSs_SessTkTimeZ, timeZo)

// timeMkSs_KillTykOpen				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillTykTimeOpen,	switchFxMksSession)))
// timeMkSs_KillTykRally				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillTykTimeRally,	switchFxMksSession)))
// timeMkSs_KillTykClose				= math.sign(nz(time(timeframe.period,	vFxMkSs_KillTykTimeClose,	switchFxMksSession)))

/// ─── Timeframe Sydney
int timeMkSs_SessSyd				= time(timeframe.period, vFxMkSs_SessSdTimeZ, timeZo)

//// ───────────────────────
/// ─── FxMSs ───
/// ─── Drawing ───
//// ───────────────────────

/// ─── Session London
[DRAWMkSsSessLon,		DwMkSsSessLon_Open,		DwMkSsSessLon_High,		DwMkSsSessLon_Low]				= draw(showFxMkSs_SessLon,	timeMkSs_SessLon,	vFxMkSs_SessLnColor,	vFxMkSs_SessLnLabel,	vFxMkSs_SessLnExtend,	vFxMkSs_Lookback)
/// ─── Session New York
[DRAWMkSsSessNewY,		DwMkSsSessNewY_Open,	DwMkSsSessNewY_High,	DwMkSsSessNewY_Low]				= draw(showFxMkSs_SessNy,	timeMkSs_SessNewY,	vFxMkSs_SessNyColor,	vFxMkSs_SessNyLabel,	vFxMkSs_SessNyExtend,	vFxMkSs_Lookback)
/// ─── Session Tokyo
[DRAWMkSsSessTyk,		DwMkSsSessTyk_Open,		DwMkSsSessTyk_High,		DwMkSsSessTyk_Low]				= draw(showFxMkSs_SessTk,	timeMkSs_SessTyk,	vFxMkSs_SessTkColor,	vFxMkSs_SessTkLabel,	vFxMkSs_SessTkExtend,	vFxMkSs_Lookback)
/// ─── Session Sydney
[DRAWMkSsSessSyd,		DwMkSsSessSyd_Open,		DwMkSsSessSyd_High,		DwMkSsSessSyd_Low]				= draw(showFxMkSs_SessSyd,	timeMkSs_SessSyd,	vFxMkSs_SessSdColor,	vFxMkSs_SessSdLabel,	vFxMkSs_SessSdExtend,	vFxMkSs_Lookback)

/// ─── KillZones London
if showFxMkSs_KillLonOpen
	[DwMkSs_KillLon_Open, DwMkSs_KillLon_Op]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillLonOpen,	vFxMkSs_KillLonColor)
if showFxMkSs_KillLonRally
	[DwMkSs_KillLon_Rally, DwMkSs_KillLon_Rl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillLonRally,	vFxMkSs_KillLonColor)
if showFxMkSs_KillLonClose
	[DwMkSs_KillLon_Close, DwMkSs_KillLon_Cl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillLonClose,	vFxMkSs_KillLonColor)

/// ─── KillZones New York
if showFxMkSs_KillNwYOpen
	[DwMkSs_KillNwY_Open, DwMkSs_KillNwY_Op]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillNwYOpen,	vFxMkSs_KillNwYColor)
if showFxMkSs_KillNwYRally
	[DwMkSs_KillNwY_Rally, DwMkSs_KillNwY_Rl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillNwYRally,	vFxMkSs_KillNwYColor)
if showFxMkSs_KillNwYClose
	[DwMkSs_KillNwY_Close, DwMkSs_KillNwY_Cl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillNwYClose,	vFxMkSs_KillNwYColor)

// /// ─── KillZones Tokyo
// if showFxMkSs_KillTykOpen
// 	[DwMkSs_KillTyk_Open, DwMkSs_KillTyk_Op]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillTykOpen,	vFxMkSs_KillTykColor)
// if showFxMkSs_KillTykRally
// 	[DwMkSs_KillTyk_Rally, DwMkSs_KillTyk_Rl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillTykRally,	vFxMkSs_KillTykColor)
// if showFxMkSs_KillTykClose
// 	[DwMkSs_KillTyk_Close, DwMkSs_KillTyk_Cl]			= FuncFxMkSs_RenderKillZones(timeMkSs_KillTykClose,	vFxMkSs_KillTykColor)
