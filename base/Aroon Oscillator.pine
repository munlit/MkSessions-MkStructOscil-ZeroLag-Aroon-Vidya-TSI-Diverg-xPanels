//@version=5
indicator("Aroon Oscillator",
		  max_bars_back			= 500,
		  format				= format.percent,
		  max_labels_count		= 500)

// ＩＮＰＵＴＳ ―――――――――――――――――――
co_oonOsc_buy					= input.color(color.lime,		title = "Compra",	inline = "Col",		group = "Color")
co_oonOsc_sell					= input.color(color.blue,		title = "Venta",	inline = "Col",		group = "Color")
co_oonOsc_line					= input(color.new(#ffffff, 50),	title = "Linea",	inline = "Col",		group = "Color")

oonOsc_length					= input.int(defval = 55,		title = "Longitud")			// 29
oonOsc_smooth					= input.int(defval = 10,		title = "Smooth")			// 25
oonOsc_sign_length				= input.int(defval = 10,		title = "Signal")			// 10
oonOsc_gain_limit				= 10

show_oonOsc_m_reversion			= input.bool(true,				title = "Aroon Corrección",				group = "Signals")
show_oonOsc_trend_sig			= input.bool(false,				title = "Arron tendencia",				group = "Signals")

// ＣＡＬＣＵＬＡＴＩＯＮＳ―――――――――
// Zero Lag Function John Ehlers
FUN_oonOsc_zero_lag(_source, _length, _gain_limit) =>
	// Initialize variables
	float _alpha				= 2 / (_length + 1)
	float _ema					= na
	float _ecu					= na
	float _least_error			= 1000000
	float _best_gain					= 0

	// Initialize EMA
	_ema							:= na(_ema[1]) ? _source : _alpha * _source + (1 - _alpha) * nz(_ema[1])

	// Loop to find the best gain
	for int _value				= -_gain_limit to _gain_limit
		// Calculate gain and EC
		_gain					= _value / 10
		_ecu					:= na(_ecu[1]) ? _source : _alpha * (_ema + _gain * (_source - nz(_ecu[1]))) + (1 - _alpha) * nz(_ecu[1])

		// Calculate error
		float _error			= _source - _ecu

		// Check if this gain results in a smaller error
		if math.abs(_error) < _least_error
			_least_error		:= math.abs(_error)
			_best_gain			:= _gain

	// Recalculate EC using the best gain
	_ecu						:= na(_ecu[1]) ? _source : _alpha * (_ema + _best_gain * (_source - nz(_ecu[1]))) + (1 - _alpha) * nz(_ecu[1])
	_ecu

FUN_oonOsc_calculate_aroon(simple int _length, _smooth) =>
	_aroonDown					= 100 * (ta.lowestbars(low, _length) + _length) / _length
	_aroonUp					= 100 * (ta.highestbars(high, _length) + _length) / _length
	_source						= _aroonUp - _aroonDown
	_gain_limit					= oonOsc_gain_limit
	FUN_oonOsc_zero_lag(_source, _smooth, _gain_limit)

fOnOsc_aroon_osc				= FUN_oonOsc_calculate_aroon(oonOsc_length, oonOsc_smooth)
fOnOsc_sig_line					= ta.sma(fOnOsc_aroon_osc, oonOsc_sign_length)

// ＰＬＯＴ ―――――――――――――――――――――――
oonOsc_plot_line1				= plot(fOnOsc_aroon_osc,	title = "Oscilador Aroon",	color = color.from_gradient(fOnOsc_aroon_osc, -80, 80, co_oonOsc_sell, co_oonOsc_buy))
oonOsc_plot_line_mid			= plot(0,					title = "Linea media",		color = co_oonOsc_line)

plot(fOnOsc_sig_line, "Señal", color = bar_index % 2 == 0 ? co_oonOsc_line : na)

fill(oonOsc_plot_line1, oonOsc_plot_line_mid, 0, -100, na, co_oonOsc_sell)
fill(oonOsc_plot_line1, oonOsc_plot_line_mid, 100, 0, co_oonOsc_buy, na)

bgcolor(ta.crossover(fOnOsc_aroon_osc, 0) ? color.new(co_oonOsc_buy, 85) : na)
bgcolor(ta.crossover(fOnOsc_aroon_osc, 0) and show_oonOsc_trend_sig ? color.new(co_oonOsc_buy, 85) : na, force_overlay = true)

bgcolor(ta.crossunder(fOnOsc_aroon_osc, 0) ? color.new(co_oonOsc_sell, 85) : na)
bgcolor(ta.crossunder(fOnOsc_aroon_osc, 0) and show_oonOsc_trend_sig ? color.new(co_oonOsc_sell, 85) : na, force_overlay = true)

// Align plotchar and label declarations with types and columns
plotchar(ta.crossover(fOnOsc_aroon_osc, -15) and show_oonOsc_trend_sig,

		  title					= "Compra",
		  char					= "🢁", 
		  location				= location.bottom, 
		  color					= co_oonOsc_buy, 
		  size					= size.tiny, 
		  force_overlay			= true, 
		  text					= "Long", 
		  textcolor				= chart.fg_color)
		 
plotchar(ta.crossunder(fOnOsc_aroon_osc, 15) and show_oonOsc_trend_sig,
		  title					= "Venta",
		  char					= "🢃", 
		  location				= location.top, 
		  color					= co_oonOsc_sell, 
		  size					= size.tiny, 
		  force_overlay			= true, 
		  text					= "Short", 
		  textcolor				= chart.fg_color)

if barstate.islast
	label.delete(
		 label.new(bar_index, fOnOsc_aroon_osc, str.tostring(math.round(fOnOsc_aroon_osc), format.percent),
				 color			= color(na), 
				 textcolor		= fOnOsc_aroon_osc > 0 ? co_oonOsc_buy : co_oonOsc_sell, 
				 style			= label.style_label_left)[1]
				 )

if show_oonOsc_m_reversion
	if ta.crossover(fOnOsc_aroon_osc, fOnOsc_sig_line)
		label.new(bar_index, low, "●\nreversion\nup", 
				 color			= color(na), 
				 textcolor		= color.new(co_oonOsc_buy, 50), 
				 style			= label.style_label_up, 
				 force_overlay	= true)

	if ta.crossunder(fOnOsc_aroon_osc, fOnOsc_sig_line) 
		label.new(bar_index, high, "reversion\ndown\n●", 
				 color			= color(na), 
				 textcolor		= co_oonOsc_sell, 
				 style			= label.style_label_down, 
				 force_overlay	= true)

plotchar(ta.crossover(fOnOsc_aroon_osc,		fOnOsc_sig_line) ? fOnOsc_aroon_osc[1] : na,
		  title					= "cruce reversion ▲",
		  char					= "●", 
		  location				= location.absolute, 
		  color					= co_oonOsc_buy,
		  size					= size.tiny, 
		  offset				= -1)

plotchar(ta.crossunder(fOnOsc_aroon_osc,	fOnOsc_sig_line) ? fOnOsc_aroon_osc[1] : na,
		  title					= "cruce reversion ▼",
		  char					= "●", 
		  location				= location.absolute, 
		  color					= co_oonOsc_sell, 
		  size					= size.tiny, 
		  offset				= -1)



plotchar(ta.crossover(fOnOsc_aroon_osc, -15) ? -25 : na, "Compra", "▲",
		  location				= location.absolute,
		  color					= co_oonOsc_buy,
		  size					= size.tiny)

plotchar(ta.crossunder(fOnOsc_aroon_osc, 15) ? 25 : na, "Venta", "▼",
		  location				= location.absolute,
		  color					= co_oonOsc_sell,
		  size					= size.tiny)

bgcolor(fOnOsc_aroon_osc > 0 ? color.new(co_oonOsc_buy, 95) : color.new(co_oonOsc_sell, 95))
